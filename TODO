Test app:
  use the Pkg, Metadata, Github packages to get extended information about official packages: details, commit history, stars, watchers, etc.
  provide functionality to search packages by various criteria
  provide a web ui for searching packages

v 0.5.x
✔ has_many
✔ logging in production: requests & errors, logging level, logging formatting options
✔ bug fix: github search overwriting official packages (test app)
✔ generators for models, controllers, resources
✔ has_many_through, has_one_through, has_and_belongs_to_many relationships <-- sort of, added support for random relationships using SQLOn()
✔ html/mustache layouts, views and rendering
✔ assets management && brunch integration
✔ authors  (test app)
✔ add stars, forks, watchers, etc (test app) @done (16-07-12 22:22)

v 0.6.x
☐ new test app - blogging platform
☐ support for POST - routing, params, etc
☐ hooks: before controller action invoked & model hooks (before save, before dehydration, after hydration, etc)
☐ model validations
☐ authorization
☐ caching - data caching (redis, memcache, file system)
☐ view / partials caching -- and not reloading views in production

v 0.7.x
☐ channels (websockets communication)
☐ encrypt sessions and cookies
✔ add a method to automatically run all DOWN migrations

v 0.8.x
☐ support for plugins
☐ admin plugin (test app)
☐ packages versioning (declarative packages)
☐ proper error handling (50x, 40x)

v 0.9.x
☐ parallel serving
☐ performance enhancements, cleanup
☐ doc comments
☐ rename methods ending in ! to end in !! and follow julia's guidelines
✔ rename methods to not use "_" @done (16-07-12 22:23)
☐ more tests
☐ REPL utility to setup a new app

v 1.0
☐ official API docs
☐ official website - blog, walkthroughs, tutorials, etc

v 1.1
☐ support for mysql
☐ support for sqlite
☐ reverse routing -> resource to route

v 1.2
☐ mailers

v 1.x
+ change from Logging to Lumberjack?

Other parts:
  ✔ lazy relationships - to skip relationship if lazy
  ✔ force loading relationship (with relationship!()) if the relationship has not been loaded (cause lazy)
  2. streaming queries - get the result set (dataframe) but don't convert each row to models - instead iterate row by row as the data is requested
  3. batch query results - convenience method to batch results (behind the scene using limit and offset and an iterator)
  ✔ propery use show() and print() for types
  ✔ updated_at does not work because it's not defined in type


☐ json output <- with json views / renderer & request type matching (.json or .html)
✔ code generators (controllers) @done (16-06-19 00:33)

✔ complete routing to support "route", :controller, :action [done]
✔ code reloading when files are changed (via Autoreload [https://github.com/malmaud/Autoreload.jl] or https://github.com/rened/Watcher.jl) or https://github.com/wavexx/Expect.jl
✔ rendering -> auto-rendering layouts, views and partials (mustache only first or directly to ejl)
✔ trailblazer architecture
✔ logging (via the logging.jl pkg or Lumberjack.jl)
✔ parsing of command line args for server, console, websockets (via ArgParse pkg)
✔ debugger https://github.com/toivoh/Debug.jl or gallium (gallium does not work, let's see in v0.5. using Debug)
✔ add tests with https://github.com/JuliaLang/FactCheck.jl https://github.com/codeneomatrix/Faker.jl https://github.com/burrowsa/Fixtures.jl +++ linting
✔ models - DataFrames & https://github.com/JuliaStats/DataFramesMeta.jl

======

refactor
✔ Genie.render - all rendering methods should be DRY and support various rendering engines

Other
https://github.com/JockLawrie/AccessControl.jl <--
https://github.com/zachallaun/ValueDispatch.jl
https://github.com/invenia/DateParser.jl  <-- extended date time parsing
https://github.com/JuliaWeb/GitHub.jl
https://github.com/snotskie/Helpme.jl
https://github.com/IainNZ/Humanize.jl  <-- Humanize numbers
https://github.com/Rory-Finnegan/Interfaces.jl
https://github.com/JuliaLang/JSON.jl
https://github.com/arypurnomoz/JulieTest.jl
https://github.com/one-more-minute/Lazy.jl
https://github.com/zenna/Lens.jl
https://github.com/JuliaLang/LightXML.jl
https://github.com/tonyhffong/Lint.jl   <-- for linting
https://github.com/one-more-minute/MacroTools.jl
https://github.com/JuliaArchive/Markdown.jl
https://github.com/kmsquire/Match.jl
https://github.com/tanmaykm/Memcache.jl
https://github.com/simonster/Memoize.jl
https://github.com/IainNZ/MetadataTools.jl
https://github.com/pzion/Mongo.jl
https://github.com/aviks/Mongrel2.jl
https://github.com/JuliaDB/MySQL.jl
https://github.com/jonasrauber/OSXNotifier.jl
https://github.com/shashi/Patchwork.jl
https://github.com/eschnett/Persist.jl
https://github.com/wavexx/Polyglot.jl
https://github.com/MichaelHatherly/PrivateModules.jl
https://github.com/timholy/ProfileView.jl
https://github.com/timholy/ProgressMeter.jl
https://github.com/jkaye2012/Redis.jl
https://github.com/JuliaWeb/Requests.jl
https://github.com/one-more-minute/Requires.jl
https://github.com/simonster/Reexport.jl
https://github.com/JuliaDB/SQLite.jl
https://github.com/sjkelly/SaveREPL.jl
https://github.com/JockLawrie/SecureSessions.jl
https://github.com/mbauman/Sparklines.jl
https://github.com/invenia/StackTraces.jl
https://github.com/aviks/Taro.jl
https://github.com/sunetos/TextPlots.jl
https://github.com/rohitvarkey/ThreeJS.jl
https://github.com/quinnj/TimeZones.jl
https://github.com/randyzwitch/Twitter.jl
https://github.com/JuliaWeb/URIParser.jl
https://github.com/Keno/SIUnits.jl
https://github.com/rened/Watcher.jl
https://github.com/JuliaWeb/WebSockets.jl
https://github.com/dcjones/YAML.jl
https://github.com/JuliaLang/ZMQ.jl

# DeclarativePackages
https://github.com/rened/DeclarativePackages.jl
Pkg.add("DeclarativePackages")
symlink(Pkg.dir("DeclarativePackages")*"/bin/jdp",  "$(homedir())/local/bin/jdp")
